// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum AccountType {
  ADMIN
  VENDOR
  SUPPLIER
}

enum AccountStatus {
  ACCOUNTCREATION
  PENDING
  ACTIVE
  BANNED
  SUSPENDED
}

enum ConnectionRequest {
  DENIED
  ACCEPTED
  PENDING
}



model Account {
  id                Int           @id @default(autoincrement())
  accountId         String        @db.VarChar(255)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  name              String        @db.VarChar(255)
  username          String        @db.VarChar(255)
  bio               String        @db.Text
  profileImage      String        @db.Text
  coverImage        String        @db.Text
  paymentCustomerId String        @db.VarChar(225)
  email             String        @db.VarChar(225)
  ABN               String        @db.VarChar(225)
  accountType       AccountType
  accountStatus     AccountStatus @default(ACCOUNTCREATION)
  slug              String        @unique @db.VarChar(225)
  posts             Post[]
  connections       Connection[]
  @@index([accountId, slug])
}

model Connection {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  supplierId Int
  accounts   Account  @relation(fields: [vendorId], references: [id])
  vendorId   Int
  suppierRequest ConnectionRequest @default(PENDING)
  vendorReqeust ConnectionRequest @default(PENDING)
  @@index([vendorId, supplierId])
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Post {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  slug        String   @unique @db.VarChar(225)
  title       String   @db.VarChar(255)
  description String   @db.Text
  likes       Like[]
  accounts    Account  @relation(fields: [accountId], references: [id])
  accountId   Int
}


