// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum AccountType {
  ADMIN
  VENDOR
  SUPPLIER
}

enum AccountStatus {
  PENDING
  ACTIVE
  BANNED
  SUSPENDED
}

enum OrderStatus {
  DELIVERED
  TRANSIT
  PENDING
}

model Accounts {
  id                Int           @id @default(autoincrement())
  accountId         String        @db.VarChar(255)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  name              String        @db.VarChar(255)
  bio               String        @db.Text
  profileImage      String        @db.Text
  coverImage        String        @db.Text
  paymentCustomerId String        @db.VarChar(225)
  ABN               String        @db.VarChar(225)
  accountType       AccountType
  accountStatus     AccountStatus
  slug              String        @unique @db.VarChar(225)
  likes             Likes[]
  posts             Posts[]

  @@index([accountId, slug])
}

model Likes {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts  Accounts @relation(fields: [accountId], references: [id])
  accountId Int
  post      Posts    @relation(fields: [postId], references: [id])
  postId    Int
}

model Posts {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  slug        String   @unique @db.VarChar(225)
  title       String   @db.VarChar(255)
  description String   @db.Text
  likes       Likes[]
  accounts    Accounts @relation(fields: [accountId], references: [id])
  accountId   Int
}

model Orders {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  name        String      @db.VarChar(255)
  orderStatus OrderStatus
}

model Products {
  id                Int               @id @default(autoincrement())
  slug              String            @unique @db.VarChar(225)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  name              String            @db.VarChar(255)
  sku               String            @db.VarChar(255)
  price             Int
  specialPrice      Int
  specialQuantity   Int
  specialEnds       DateTime
  quantity          Int
  minimumOrder      Int
  productCategory   ProductCategories @relation(fields: [productCategoryId], references: [id])
  productCategoryId Int
}

model ProductCategories {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String     @db.VarChar(255)
  description String     @db.MediumText
  products    Products[]
}

model ProductHistory {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String   @db.VarChar(255)
  constellation String   @db.VarChar(255)
}

model ShoppingCart {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String   @db.VarChar(255)
  constellation String   @db.VarChar(255)
}

model PageViews {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String   @db.VarChar(255)
  constellation String   @db.VarChar(255)
}

model PageStyles {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String   @db.VarChar(255)
  constellation String   @db.VarChar(255)
}
